--@name MyProps Vr
--@author NepNep | discord: stirven
--@shared

if CLIENT then
    if player() != owner() then return end
    enableHud(owner(), true)
    
    local backgroundHolo = hologram.create(owner():getEyePos(), Angle(), "models/hunter/misc/shell2x2.mdl", Vector(10, 10, 10))
    backgroundHolo:setMaterial("debug/debugportals")
    backgroundHolo:setColor(Color(255, 255, 255, 255))
    backgroundHolo:setNoDraw(true)
    
    local floor = hologram.create(owner():getPos(), Angle(), "models/hunter/plates/plate32x32.mdl", Vector(20, 20, 1))
    floor:setMaterial("sprops/sprops_grid_12x12")
    floor:setNoDraw(true)
    
    local function filterMyProps(ent)
        return ent:getOwner() == owner()
    end
    
    local function createHologram(ent)
        local modelScale = ent:getModelScale()
        local newHologram = hologram.create(ent:getPos(), ent:getAngles(), ent:getModel(), Vector(modelScale, modelScale, modelScale))
        newHologram:setMaterial(ent:getMaterial())
        newHologram:setColor(ent:getColor())
        print(ent:getColor())
        return newHologram
    end
    
    local myProps = find.all(filterMyProps)
    local myHolograms = {}
    
    for index, myProp in ipairs(myProps) do
        if not isValid(myProp) then continue end
        myHolograms[myProp] = createHologram(myProp)
    end
    
    myProps = nil
    
    hook.add("tick", "SetPosHolograms", function()
        backgroundHolo:setPos(owner():getEyePos())
        
        for i, myProp in ipairs(table.getKeys(myHolograms)) do
            local myHologram = myHolograms[myProp]
            
            if not isValid(myProp) then
                if isValid(myHologram) then
                    myHologram:remove()
                end
                table.remove(myHolograms, index)
                continue
            end
            
            if not isValid(myHologram) then
                myHolograms[myProp] = createHologram(myProp)
                myHologram = myHolograms[myProp]
            end
                        
            myHologram:setColor(myProp:getColor():setA(255))
            myHologram:setMaterial(myProp:getMaterial())
            
            myHologram:setPos(myProp:getPos())
            myHologram:setAngles(myProp:getAngles())
        end
    end)
    
    hook.add("postdrawopaquerenderables", "", function(depth, skybox)
        backgroundHolo:draw()      
        floor:draw()
        
        for i, myProp in ipairs(table.getKeys(myHolograms)) do
            local myHologram = myHolograms[myProp]
            if not isValid(myHologram) then continue end
            
            myHologram:draw()
        end
    end)
    
    net.receive("SendNewEnt", function()
        local ent = net.readEntity()
        if not isValid(ent) then return end
        myHolograms[ent] = createHologram(ent)
    end)
    
elseif SERVER then
    hook.add("OnEntityCreated", "MonitorEntityCreated", function(ent)        
        if not isValid(ent) then return end
        if ent:getOwner() != owner() then return end
        
        net.start("SendNewEnt")
        net.writeEntity(ent)
        net.send()
        ent:setColor(ent:getColor():setA(0))
    end)
    
end