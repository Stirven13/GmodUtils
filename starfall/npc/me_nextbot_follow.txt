--@name
--@author NepNep | discord: stirven
--@shared

local dataParameters = {
    sounds = {
        flashlight1 = "items/flashlight1.wav",
        scanner_photo1 = "npc/scanner/scanner_photo1.wav"
    },
    act = {
        gesture = {
            ACT_GMOD_GESTURE_WAVE = 1615
        },
        movement = {
            ACT_HL2MP_WALK = 1778,
            ACT_HL2MP_RUN = 1779,
            ACT_HL2MP_IDLE_CROUCH = 1780,
            ACT_HL2MP_WALK_CROUCH = 1781
        },
        stay = {
            ACT_HL2MP_IDLE_CAMERA = 1673,
            ACT_HL2MP_IDLE_SUITCASE = 1713,
            ACT_HL2MP_IDLE = 1777
        }
    },
    speed = {
        stay = 0,
        crouch = 60,
        slowWalk = 100,
        walk = 200,
        run = 400,
        fastRun = 600,
        maximum = 1024
    },
    cooldowns = {
        minAttractWithSoundFlashlight = math.round(1 / timer.frametime() / 7),
        maxAttractWithSoundFlashlight = math.round(1 / timer.frametime() / 4)
    },
    parameters = {
        maxNumberToTryAttractAttentionWithFlashlight = 10
    },
    limits = {
        maxCountRecoedsNavAreas = 10,
        minNeededNavAreas = 3,
        maxCountPoses = math.round(1 / timer.frametime()) * 10,
        minNeededPoses = 5,
    }
}

local enums = {
    
}

local MeNextbot = class("MeNextbot")

function MeNextbot:initialize()
    self.bot = nextbot.create(chip():getPos() + Vector(0, 0, 10), owner():getModel())
    
    self.targetPlayer = owner()
    
    self.bot:setMoveSpeed(dataParameters.speed.run)
    self.bot:setRunAct(dataParameters.act.movement.ACT_HL2MP_RUN)
    self.bot:setIdleAct(dataParameters.act.stay.ACT_HL2MP_IDLE)
    self.bot:setGotoPos(chip():getPos() + Vector(1, 1, 1))
    self.bot:setStepHeight(30)
end

function MeNextbot:think()
    self.bot:setGotoPos(owner():getPos())
end

if CLIENT then

elseif SERVER then    
    local function createBot()
        local bot = MeNextbot:new()
        
        timer.simple(1, function()
            hook.add("think", "NextbotThink", function()
                bot:think()
            end)
        end)
    end
    
    if not hasPermission("nextbot.create") then
        setupPermissionRequest({"nextbot.create"}, "Create nextbot", true)
    else
        createBot()
    end
    
     hook.add("permissionrequest", "permission", function()
        if hasPermission("nextbot.create") then
            createBot()
        end
    end)   
end