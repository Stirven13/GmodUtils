--@name All E2 on HUD
--@author NepNep | discord: stirven
--@shared

e2ChipClass = "gmod_wire_expression2"

if CLIENT then
    if owner() != player() then return end
    enableHud(owner(), true)
    
    local function getNickWithoutTags(nick)
        local nickWithoutTag, replacementCount = string.gsub(nick, "<[^>]*>", "")
        return nickWithoutTag
    end    
    
    local rectWidth = 3
    local chipsE2 = find.byClass(e2ChipClass)
    
    hook.add("postdrawhud", "DrawE2", function()
        for i, chipE2 in ipairs(chipsE2) do
            if not isValid(chipE2) then continue end
            
            local vectorScreen = chipE2:getPos():toScreen()
            render.drawRectFast(vectorScreen.x - rectWidth, vectorScreen.y - rectWidth, rectWidth, rectWidth)
            pcall(function()
                render.drawText(vectorScreen.x, vectorScreen.y, getNickWithoutTags(chipE2:getOwner():getName()), 1)
            end)
        end
    end)
    
    timer.create("DetectAllE2Chips", 5, 0, function()
        chipsE2 = find.byClass(e2ChipClass)
    end)
    
    
elseif SERVER then
    local function getNickWithoutTags(nick)
        local nickWithoutTag, replacementCount = string.gsub(nick, "<[^>]*>", "")
        return nickWithoutTag
    end
    
    hook.add("OnEntityCreated", "DetectSpawnNewE2Chip", function(ent)
        if not isValid(ent) then return end
        if ent:getClass() != e2ChipClass then return end
        
        local chipE2Owner = ent:getOwner()
        
        print("Spawn New Chip")
        print(getNickWithoutTags(chipE2Owner:getName()))
        print(chipE2Owner:getSteamID())
    end)
    
    hook.add("EntityRemoved", "DetectRemoveE2Chip", function(ent)
        if not isValid(ent) then return end
        if ent:getClass() != e2ChipClass then return end
        
        local chipE2Owner = ent:getOwner()
        
        print("Remove Chip")
        print(getNickWithoutTags(chipE2Owner:getName()))
        print(chipE2Owner:getSteamID())
    end)
end