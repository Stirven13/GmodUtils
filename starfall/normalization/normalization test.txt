--@name Test Normalization Simple Trail
--@author NepNep | discord: stirven
--@client

if player() != owner() then return end

local inputTrail = {
    Vector(0, 0, 1), Vector(0, 0, 10)
}

local neededDistance = 1

local neededDistanceSqr = math.pow(neededDistance, 2)

local function getCorrectTrail(inputTrail)
    local correctTrail = { }
    local lastPoint = inputTrail[1]
    
    if inputTrail[1] != inputTrail[#inputTrail] then
        table.insert(inputTrail, inputTrail[1])
    end
    
    for i, trailPoint in ipairs(inputTrail) do
        if lastPoint:getDistanceSqr(trailPoint) < neededDistanceSqr then continue end
        
        while lastPoint:getDistanceSqr(trailPoint) >= neededDistanceSqr do
            local direction = (trailPoint - lastPoint):getNormalized()
            lastPoint = lastPoint + direction * neededDistance
            
            table.insert(correctTrail, lastPoint)
        end
    end
    
    return correctTrail
end

local normalizeTrail = getCorrectTrail(inputTrail)

for i, point in ipairs(normalizeTrail) do
    print(string.format("%d - Vector(%f, %f, %f)", i, point.x, point.y, point.z))
end