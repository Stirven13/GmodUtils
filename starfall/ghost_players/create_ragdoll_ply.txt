--@name CreateRagdollPly
--@author NepNep | discord: stirven
--@server

function createRagdollOf(ply)
    local ent
    local success, result = pcall(function()
        ent = prop.createRagdoll(ply:getModel(), false)
    end)
    if not success then return end
    
    ent:setPos(ply:getPos())
    ent:setNocollideAll(true)
    ent:setCollisionGroup(COLLISION_GROUP.IN_VEHICLE)
    
    for i = 0, ent:getPhysicsObjectCount() - 1 do
        local obj = ent:getPhysicsObjectNum(i)
        local bone = ent:translatePhysBoneToBone(i)
        local pos, ang = ply:getBonePosition(bone)
        
        obj:setPos(pos)
        obj:setAngles(ang)
        //obj:setVelocity(ply:getVelocity())
        obj:enableMotion(false)
    end
    ent:setPos(ply:getPos())
    
    local bodygroups = ent:getBodygroups()
    for i, bodygroup in ipairs(bodygroups) do
        
        local playerBodygroup = ply:lookupBodygroup(bodygroup.name)
        print(playerBodygroup.name)
        //ent:setBodygroup(bodygroup.id, 1)
    end
    
    return ent
end

local function createWeapon(ply)
    local weapon = ply:getActiveWeapon()  
    if not isValid(weapon) then return end
    
    local handBoneIndex = ply:lookupBone("ValveBiped.Bip01_R_Hand")
    if not handBoneIndex then return end
    
    local pos, ang = ply:getBonePosition(handBoneIndex)
    ang = ang + Angle(0, 0, 180)
    
    local ent = nil
    
    local success, result = pcall(function()
        ent = prop.create(pos, ang, weapon:getModel(), true)
    end)
    
    if not success then return end
    ent:setNocollideAll(true)
    ent:setCollisionGroup(COLLISION_GROUP.IN_VEHICLE)
    return ent
end

local function createClone(ply)
    local ent = createRagdollOf(ply)
    if ent == nil then return end
    createWeapon(ply)
end

hook.add("PlayerSay", "CheckPlayerSay", function(ply, text, teamChat)
    if ply != owner() then return end
    
    local textLower = string.lower(text)
    if table.hasValue({"!cloneme"}, textLower) then
        createClone(owner())
    end
    
    if table.hasValue({"!cloneit"}, textLower) then
        local tracedEntity = owner():getEyeTrace()
        if not tracedEntity.Entity:isPlayer() then return end
        
        createClone(tracedEntity.Entity)
    end
end)

